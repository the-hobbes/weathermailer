// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weather.proto

/*
Package weather is a generated protocol buffer package.

It is generated from these files:
	weather.proto

It has these top-level messages:
	Weather
	WeatherConditions
*/
package weather

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Weather_WeatherKind int32

const (
	// http://openweathermap.org/weather-conditions
	Weather_THUNDERSTORM Weather_WeatherKind = 0
	Weather_DRIZZLE      Weather_WeatherKind = 1
	Weather_RAIN         Weather_WeatherKind = 2
	Weather_SNOW         Weather_WeatherKind = 3
	Weather_ATMOSPHERE   Weather_WeatherKind = 4
	Weather_CLEAR        Weather_WeatherKind = 5
	Weather_CLOUDS       Weather_WeatherKind = 6
	Weather_EXTREME      Weather_WeatherKind = 7
	Weather_ADDITIONAL   Weather_WeatherKind = 8
	Weather_COLD         Weather_WeatherKind = 9
	Weather_HOT          Weather_WeatherKind = 10
)

var Weather_WeatherKind_name = map[int32]string{
	0:  "THUNDERSTORM",
	1:  "DRIZZLE",
	2:  "RAIN",
	3:  "SNOW",
	4:  "ATMOSPHERE",
	5:  "CLEAR",
	6:  "CLOUDS",
	7:  "EXTREME",
	8:  "ADDITIONAL",
	9:  "COLD",
	10: "HOT",
}
var Weather_WeatherKind_value = map[string]int32{
	"THUNDERSTORM": 0,
	"DRIZZLE":      1,
	"RAIN":         2,
	"SNOW":         3,
	"ATMOSPHERE":   4,
	"CLEAR":        5,
	"CLOUDS":       6,
	"EXTREME":      7,
	"ADDITIONAL":   8,
	"COLD":         9,
	"HOT":          10,
}

func (x Weather_WeatherKind) String() string {
	return proto.EnumName(Weather_WeatherKind_name, int32(x))
}
func (Weather_WeatherKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Weather struct {
	Sayings []*Weather_FolksySaying `protobuf:"bytes,1,rep,name=sayings" json:"sayings,omitempty"`
}

func (m *Weather) Reset()                    { *m = Weather{} }
func (m *Weather) String() string            { return proto.CompactTextString(m) }
func (*Weather) ProtoMessage()               {}
func (*Weather) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Weather) GetSayings() []*Weather_FolksySaying {
	if m != nil {
		return m.Sayings
	}
	return nil
}

type Weather_FolksySaying struct {
	Saying string              `protobuf:"bytes,1,opt,name=saying" json:"saying,omitempty"`
	Kind   Weather_WeatherKind `protobuf:"varint,2,opt,name=kind,enum=weather.Weather_WeatherKind" json:"kind,omitempty"`
}

func (m *Weather_FolksySaying) Reset()                    { *m = Weather_FolksySaying{} }
func (m *Weather_FolksySaying) String() string            { return proto.CompactTextString(m) }
func (*Weather_FolksySaying) ProtoMessage()               {}
func (*Weather_FolksySaying) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Weather_FolksySaying) GetSaying() string {
	if m != nil {
		return m.Saying
	}
	return ""
}

func (m *Weather_FolksySaying) GetKind() Weather_WeatherKind {
	if m != nil {
		return m.Kind
	}
	return Weather_THUNDERSTORM
}

type WeatherConditions struct {
	Weathers []*Weather `protobuf:"bytes,1,rep,name=weathers" json:"weathers,omitempty"`
}

func (m *WeatherConditions) Reset()                    { *m = WeatherConditions{} }
func (m *WeatherConditions) String() string            { return proto.CompactTextString(m) }
func (*WeatherConditions) ProtoMessage()               {}
func (*WeatherConditions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WeatherConditions) GetWeathers() []*Weather {
	if m != nil {
		return m.Weathers
	}
	return nil
}

func init() {
	proto.RegisterType((*Weather)(nil), "weather.Weather")
	proto.RegisterType((*Weather_FolksySaying)(nil), "weather.Weather.FolksySaying")
	proto.RegisterType((*WeatherConditions)(nil), "weather.WeatherConditions")
	proto.RegisterEnum("weather.Weather_WeatherKind", Weather_WeatherKind_name, Weather_WeatherKind_value)
}

func init() { proto.RegisterFile("weather.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xdd, 0xfe, 0xc9, 0xb6, 0xd3, 0x5a, 0xc6, 0x39, 0x48, 0x11, 0x85, 0xd2, 0x53, 0x0f,
	0x52, 0xa4, 0x1e, 0x3c, 0x87, 0xec, 0x4a, 0x83, 0x69, 0x56, 0x36, 0x5b, 0x5a, 0x7a, 0xab, 0xb4,
	0x68, 0xa8, 0x24, 0xd2, 0x04, 0xa4, 0x4f, 0xe2, 0x9b, 0xf8, 0x7c, 0x92, 0x74, 0x23, 0x45, 0x4f,
	0x3b, 0xb3, 0xf3, 0xfb, 0x3e, 0xf6, 0xdb, 0x81, 0xf3, 0xcf, 0xed, 0x3a, 0x7f, 0xdb, 0xee, 0xc7,
	0x1f, 0xfb, 0x34, 0x4f, 0x89, 0xdb, 0x76, 0xf8, 0x5d, 0x03, 0xbe, 0x38, 0xd6, 0xf4, 0x00, 0x3c,
	0x5b, 0x1f, 0xe2, 0xe4, 0x35, 0xeb, 0xb3, 0x41, 0x7d, 0xd4, 0x99, 0xdc, 0x8c, 0x2b, 0x95, 0x45,
	0xc6, 0x8f, 0xe9, 0xfb, 0x2e, 0x3b, 0x44, 0x25, 0xa5, 0x2b, 0xfa, 0x6a, 0x09, 0xdd, 0xd3, 0x01,
	0x5d, 0x82, 0x73, 0x1c, 0xf5, 0xd9, 0x80, 0x8d, 0xda, 0xda, 0x76, 0x74, 0x07, 0x8d, 0x5d, 0x9c,
	0x6c, 0xfa, 0xb5, 0x01, 0x1b, 0xf5, 0x26, 0xd7, 0xff, 0xdc, 0xed, 0xf9, 0x14, 0x27, 0x1b, 0x5d,
	0x92, 0xc3, 0x2f, 0x06, 0x9d, 0x93, 0x5b, 0x42, 0xe8, 0x9a, 0xe9, 0x3c, 0x14, 0x52, 0x47, 0x46,
	0xe9, 0x19, 0x9e, 0x51, 0x07, 0xb8, 0xd0, 0xfe, 0x6a, 0x15, 0x48, 0x64, 0xd4, 0x82, 0x86, 0x76,
	0xfd, 0x10, 0x6b, 0x45, 0x15, 0x85, 0x6a, 0x81, 0x75, 0xea, 0x01, 0xb8, 0x66, 0xa6, 0xa2, 0xe7,
	0xa9, 0xd4, 0x12, 0x1b, 0xd4, 0x86, 0xa6, 0x17, 0x48, 0x57, 0x63, 0x93, 0x00, 0x1c, 0x2f, 0x50,
	0x73, 0x11, 0xa1, 0x53, 0xf8, 0xc8, 0xa5, 0xd1, 0x72, 0x26, 0x91, 0x97, 0x1a, 0x21, 0x7c, 0xe3,
	0xab, 0xd0, 0x0d, 0xb0, 0x55, 0xb8, 0x79, 0x2a, 0x10, 0xd8, 0x26, 0x0e, 0xf5, 0xa9, 0x32, 0x08,
	0x43, 0x17, 0x2e, 0xec, 0xc3, 0xbc, 0x34, 0xd9, 0xc4, 0x79, 0x9c, 0x26, 0x19, 0xdd, 0x42, 0xcb,
	0x66, 0xaa, 0xbe, 0x10, 0xff, 0x86, 0xd4, 0xbf, 0xc4, 0x8b, 0x53, 0xee, 0xe2, 0xfe, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x87, 0x6f, 0xb4, 0xc6, 0x9c, 0x01, 0x00, 0x00,
}
