// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weather.proto

/*
Package weather is a generated protocol buffer package.

It is generated from these files:
	weather.proto

It has these top-level messages:
	Weather
	WeatherConditions
*/
package weather

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Weather_WeatherType int32

const (
	// http://openweathermap.org/weather-conditions
	Weather_THUNDERSTORM Weather_WeatherType = 0
	Weather_DRIZZLE      Weather_WeatherType = 1
	Weather_RAIN         Weather_WeatherType = 2
	Weather_SNOW         Weather_WeatherType = 3
	Weather_ATMOSPHERE   Weather_WeatherType = 4
	Weather_CLEAR        Weather_WeatherType = 5
	Weather_CLOUDS       Weather_WeatherType = 6
	Weather_EXTREME      Weather_WeatherType = 7
	Weather_ADDITIONAL   Weather_WeatherType = 8
	Weather_COLD         Weather_WeatherType = 9
	Weather_HOT          Weather_WeatherType = 10
)

var Weather_WeatherType_name = map[int32]string{
	0:  "THUNDERSTORM",
	1:  "DRIZZLE",
	2:  "RAIN",
	3:  "SNOW",
	4:  "ATMOSPHERE",
	5:  "CLEAR",
	6:  "CLOUDS",
	7:  "EXTREME",
	8:  "ADDITIONAL",
	9:  "COLD",
	10: "HOT",
}
var Weather_WeatherType_value = map[string]int32{
	"THUNDERSTORM": 0,
	"DRIZZLE":      1,
	"RAIN":         2,
	"SNOW":         3,
	"ATMOSPHERE":   4,
	"CLEAR":        5,
	"CLOUDS":       6,
	"EXTREME":      7,
	"ADDITIONAL":   8,
	"COLD":         9,
	"HOT":          10,
}

func (x Weather_WeatherType) String() string {
	return proto.EnumName(Weather_WeatherType_name, int32(x))
}
func (Weather_WeatherType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Weather struct {
	Sayings []*Weather_FolksySaying `protobuf:"bytes,1,rep,name=sayings" json:"sayings,omitempty"`
}

func (m *Weather) Reset()                    { *m = Weather{} }
func (m *Weather) String() string            { return proto.CompactTextString(m) }
func (*Weather) ProtoMessage()               {}
func (*Weather) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Weather) GetSayings() []*Weather_FolksySaying {
	if m != nil {
		return m.Sayings
	}
	return nil
}

type Weather_FolksySaying struct {
	Saying string              `protobuf:"bytes,1,opt,name=saying" json:"saying,omitempty"`
	Type   Weather_WeatherType `protobuf:"varint,2,opt,name=type,enum=weather.Weather_WeatherType" json:"type,omitempty"`
}

func (m *Weather_FolksySaying) Reset()                    { *m = Weather_FolksySaying{} }
func (m *Weather_FolksySaying) String() string            { return proto.CompactTextString(m) }
func (*Weather_FolksySaying) ProtoMessage()               {}
func (*Weather_FolksySaying) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Weather_FolksySaying) GetSaying() string {
	if m != nil {
		return m.Saying
	}
	return ""
}

func (m *Weather_FolksySaying) GetType() Weather_WeatherType {
	if m != nil {
		return m.Type
	}
	return Weather_THUNDERSTORM
}

type WeatherConditions struct {
	Weathers []*Weather `protobuf:"bytes,1,rep,name=weathers" json:"weathers,omitempty"`
}

func (m *WeatherConditions) Reset()                    { *m = WeatherConditions{} }
func (m *WeatherConditions) String() string            { return proto.CompactTextString(m) }
func (*WeatherConditions) ProtoMessage()               {}
func (*WeatherConditions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WeatherConditions) GetWeathers() []*Weather {
	if m != nil {
		return m.Weathers
	}
	return nil
}

func init() {
	proto.RegisterType((*Weather)(nil), "weather.Weather")
	proto.RegisterType((*Weather_FolksySaying)(nil), "weather.Weather.FolksySaying")
	proto.RegisterType((*WeatherConditions)(nil), "weather.WeatherConditions")
	proto.RegisterEnum("weather.Weather_WeatherType", Weather_WeatherType_name, Weather_WeatherType_value)
}

func init() { proto.RegisterFile("weather.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xdd, 0xfe, 0xc9, 0xb6, 0xd3, 0x5a, 0xc6, 0x39, 0x48, 0x11, 0x85, 0xd2, 0x53, 0x0f,
	0x52, 0xa4, 0x1e, 0x3c, 0x87, 0xec, 0x4a, 0x03, 0x69, 0x56, 0x36, 0x5b, 0x5a, 0x7a, 0xab, 0x18,
	0xb4, 0x28, 0x4d, 0x68, 0x02, 0x92, 0x27, 0xf1, 0x4d, 0x7c, 0x3e, 0x49, 0xba, 0x91, 0xa2, 0xa7,
	0x9d, 0xd9, 0xf9, 0x7d, 0x1f, 0xfb, 0xed, 0xc0, 0xf9, 0x67, 0xbc, 0xcd, 0xdf, 0xe2, 0xc3, 0x34,
	0x3d, 0x24, 0x79, 0x42, 0xdc, 0xb6, 0xe3, 0xef, 0x06, 0xf0, 0xd5, 0xb1, 0xa6, 0x07, 0xe0, 0xd9,
	0xb6, 0xd8, 0xed, 0x5f, 0xb3, 0x21, 0x1b, 0x35, 0x27, 0xbd, 0xd9, 0xcd, 0xb4, 0x56, 0x59, 0x64,
	0xfa, 0x98, 0x7c, 0xbc, 0x67, 0x45, 0x54, 0x51, 0xba, 0xa6, 0xaf, 0xd6, 0xd0, 0x3f, 0x1d, 0xd0,
	0x25, 0x38, 0xc7, 0xd1, 0x90, 0x8d, 0xd8, 0xa4, 0xab, 0x6d, 0x47, 0x77, 0xd0, 0xca, 0x8b, 0x34,
	0x1e, 0x36, 0x46, 0x6c, 0x32, 0x98, 0x5d, 0xff, 0x73, 0xb7, 0xa7, 0x29, 0xd2, 0x58, 0x57, 0xe4,
	0xf8, 0x8b, 0x41, 0xef, 0xe4, 0x96, 0x10, 0xfa, 0x66, 0xbe, 0x0c, 0x85, 0xd4, 0x91, 0x51, 0x7a,
	0x81, 0x67, 0xd4, 0x03, 0x2e, 0xb4, 0xbf, 0xd9, 0x04, 0x12, 0x19, 0x75, 0xa0, 0xa5, 0x5d, 0x3f,
	0xc4, 0x46, 0x59, 0x45, 0xa1, 0x5a, 0x61, 0x93, 0x06, 0x00, 0xae, 0x59, 0xa8, 0xe8, 0x69, 0x2e,
	0xb5, 0xc4, 0x16, 0x75, 0xa1, 0xed, 0x05, 0xd2, 0xd5, 0xd8, 0x26, 0x00, 0xc7, 0x0b, 0xd4, 0x52,
	0x44, 0xe8, 0x94, 0x3e, 0x72, 0x6d, 0xb4, 0x5c, 0x48, 0xe4, 0x95, 0x46, 0x08, 0xdf, 0xf8, 0x2a,
	0x74, 0x03, 0xec, 0x94, 0x6e, 0x9e, 0x0a, 0x04, 0x76, 0x89, 0x43, 0x73, 0xae, 0x0c, 0xc2, 0xd8,
	0x85, 0x0b, 0xfb, 0x30, 0x2f, 0xd9, 0xbf, 0xec, 0xf2, 0x5d, 0xb2, 0xcf, 0xe8, 0x16, 0x3a, 0x36,
	0x53, 0xfd, 0x85, 0xf8, 0x37, 0xa4, 0xfe, 0x25, 0x9e, 0x9d, 0x6a, 0x17, 0xf7, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x35, 0xac, 0x97, 0x64, 0x9c, 0x01, 0x00, 0x00,
}
